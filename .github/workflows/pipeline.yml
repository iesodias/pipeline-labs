name: Demo GitHub Secrets

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  demonstrar-secrets:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout do código
      - name: Fazer checkout do repositório
        uses: actions/checkout@v4

      # Step 2: Demonstrar uso de secrets em variáveis de ambiente
      - name: Configurar credenciais da API
        env:
          API_KEY: ${{ secrets.API_KEY }}
          API_URL: ${{ secrets.API_URL }}
        run: |
          echo "Configurando conexão com API externa..."
          echo "URL da API: $API_URL"
          echo "API Key está configurada: ${API_KEY:+SIM}"

      # Step 3: Simular conexão com banco de dados usando secrets
      - name: Conectar ao banco de dados
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          echo "Configurando conexão com banco de dados..."
          echo "Host: $DB_HOST"
          echo "Porta: $DB_PORT"
          echo "Usuário: $DB_USERNAME"
          echo "Senha: $DB_PASSWORD"
          echo "Observe que a senha será mascarada nos logs!"

      # Step 4: Usar secret em um token de deploy
      - name: Preparar deploy com token
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        run: |
          echo "Preparando deploy..."
          echo "Token de deploy: $DEPLOY_TOKEN"
          echo "GitHub automaticamente mascara o valor real do token!"

      # Step 5: Demonstrar que secrets não são expostos em logs
      - name: Verificar segurança dos secrets
        run: |
          echo "Segurança dos Secrets:"
          echo "- Secrets nunca aparecem em logs (são substituídos por ***)"
          echo "- Secrets não são acessíveis em forks do repositório"
          echo "- Secrets só são expostos para workflows autorizados"
          echo "- Você pode atualizar secrets sem alterar o código"