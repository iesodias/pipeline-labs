name: Matrix Strategy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Job com matrix para múltiplos ambientes
  test-matrix:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false  # Não para se um job falhar
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16, 18, 20]
        include:
          # Configurações específicas
          - os: ubuntu-latest
            node-version: 20
            experimental: true
        exclude:
          # Excluir combinações problemáticas
          - os: windows-latest
            node-version: 16
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
    
    - name: Informações da matrix
      run: |
        echo "OS: ${{ matrix.os }}"
        echo "Node: ${{ matrix.node-version }}"
        echo "Experimental: ${{ matrix.experimental }}"
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Verificar versões
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
    
    - name: Executar testes específicos do OS
      run: |
        echo "Executando testes no ${{ matrix.os }} com Node ${{ matrix.node-version }}..."
        sleep 2
        echo "Testes concluídos"
    
    - name: Teste experimental
      if: matrix.experimental == true
      run: |
        echo "Executando testes experimentais..."
        sleep 1
        echo "Testes experimentais concluídos"

  # Job que coleta resultados da matrix
  collect-results:
    runs-on: ubuntu-latest
    needs: test-matrix
    
    steps:
    - name: Coletar resultados
      run: |
        echo "Coletando resultados de todos os jobs da matrix..."
        echo "Todos os testes da matrix foram executados"